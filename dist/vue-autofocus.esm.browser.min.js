/*!
  * vue-autofocus v1.0.3
  * (c) 2019 AndrÃ© Bunse (aburai)
  * @license MIT
  */
const e={initDelay:300,focusDelay:100,refocusDelay:100,select:!0,debug:!1},t=["INPUT","TEXTAREA"],n=t.concat(["SELECT","BUTTON"]),o=e=>{if(!e)return;if("function"!=typeof e.querySelector)return;if(n.includes(e.nodeName)&&!i(e))return e;let t=e.querySelector("[autofocus]");if(!t){const o=n.find(t=>!i(e.querySelector(t)));o&&(t=e.querySelector(o))}return t},i=e=>{if(!e)return"el missing";return e.getAttribute("disabled")||e.classList.contains("disabled")?"el disabled":""},c=(e,t)=>{if(!e||"function"!=typeof e.getBoundingClientRect)return!1;let n,o;if(t&&t.parent){const e=t.parent;n=e.clientWidth,o=e.clientHeight}else n=window.innerWidth,o=window.innerHeight;const i=e.getBoundingClientRect();return i.left>=0&&i.left<n&&i.top>=0&&i.top<o};let s;class l{init(e){}}l.install=function n(l,u){if(n.installed&&s===l)return;n.installed=!0,s=l;const r=Object.assign({},e,u);let a,f,d,m;l.prototype.$autofocus=function(e,n){const l=Object.assign({},r,n);let u=!1;E("vue-autofocus",e||""),this.$nextTick(()=>{a&&clearTimeout(a),a=setTimeout(()=>{const t=p();if(!t)return E("container not found",e);if(!c(t,l))return E("selector is not visible");const n=o(t);if(!(n instanceof HTMLElement))return E("found no element to focus",n);if(n===document.activeElement)return E("element already focused");const s=i(n);if(s)return E("error:",s,n);v(),E("active element before",document.activeElement),this.$nextTick(()=>{f&&clearTimeout(f),d&&clearTimeout(d),m&&clearTimeout(m),f=setTimeout(()=>{n.focus(),d=setTimeout(()=>{n===document.activeElement||u||n.focus(),m=setTimeout(()=>{n===document.activeElement||u||n.focus(),n===document.activeElement?(y(n),E("focused",n)):u?E("user event: skipped"):E("failed",document.activeElement),f=null,d=null,m=null,T()},l.refocusDelay)},l.refocusDelay)},l.focusDelay)})},l.initDelay)});const y=(e,n,o)=>{if(l.select&&e&&e.nodeName&&t.includes(e.nodeName)&&e.value)if(e.createTextRange){const t=e.createTextRange();t.move("character",o),t.select()}else try{void 0!==n&&void 0!==o?e.setSelectionRange(n,o):e.select()}catch(e){console.warn("The input element type does not support selection")}},p=()=>{let t;if("object"==typeof e&&e.ref&&this.$refs&&(e=this.$refs[e.ref]),e&&"string"==typeof e)this.$el&&"function"==typeof this.$el.querySelector&&(t=this.$el.querySelector(e),E("by selector=%s",e,t));else if(e instanceof s){const n=e;t=n.$refs.input||n.$el,E("by vue component",e,t)}else E("by component $el",t=this.$el);return t},v=()=>{document.addEventListener("click",g,!0),document.addEventListener("keyup",h,!0)},T=()=>{document.removeEventListener("click",g,!0),document.removeEventListener("keyup",h,!0)},g=()=>{u=!0},h=()=>{u=!0};function E(){l.debug&&console.log.apply(console,arguments)}}},l.version="1.0.3",window&&window.Vue&&window.Vue.use(l);export default l;