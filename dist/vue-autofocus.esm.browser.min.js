/*!
  * vue-autofocus v1.0.5
  * (c) 2020 André Bunse (aburai)
  * @license MIT
  */
/*!
  * vue-autofocus v1.0.5
  * (c) 2020 André Bunse (aburai)
  * @license MIT
  */
const e={initDelay:300,focusDelay:100,refocusDelay:100,select:!0,debug:!1},t=["INPUT","TEXTAREA"],n=t.concat(["SELECT","BUTTON"]),o=e=>{if(!e)return"el missing";return e.getAttribute("disabled")||e.classList.contains("disabled")?"el disabled":""};let i;class c{init(e){}}c.install=function c(s,l){if(c.installed&&i===s)return;c.installed=!0,i=s;const u=Object.assign({},e,l);let r,a,f,d;s.prototype.$autofocus=function(e,c){const s=Object.assign({},u,c);let l=!1;h("vue-autofocus",e||""),this.$nextTick(()=>{r&&clearTimeout(r),r=setTimeout(()=>{const t=y();if(!t)return h("container not found",e);if(!((e,t)=>{if(!e||"function"!=typeof e.getBoundingClientRect)return!1;let n,o;if(t&&t.parent){const e=t.parent;n=e.clientWidth,o=e.clientHeight}else n=window.innerWidth,o=window.innerHeight;const i=e.getBoundingClientRect();return i.left>=0&&i.left<n&&i.top>=0&&i.top<o})(t,s))return h("selector is not visible");const i=(e=>{if(!e)return;if("function"!=typeof e.querySelector)return;if(n.includes(e.nodeName)&&!o(e))return e;let t=e.querySelector("[autofocus]");if(!t){const i=n.find(t=>!o(e.querySelector(t)));i&&(t=e.querySelector(i))}return t})(t);if(!(i instanceof HTMLElement))return h("found no element to focus",i);if(i===document.activeElement)return h("element already focused");const c=o(i);if(c)return h("error:",c,i);p(),h("set focus to",i),h("active element before",document.activeElement),this.$nextTick(()=>{a&&clearTimeout(a),f&&clearTimeout(f),d&&clearTimeout(d),a=setTimeout(()=>{i.focus(),f=setTimeout(()=>{i===document.activeElement||l||i.focus(),d=setTimeout(()=>{i===document.activeElement||l||i.focus(),i===document.activeElement?(m(i),h("focused",i)):l?h("user event: skipped"):h("failed",document.activeElement),a=null,f=null,d=null,v()},s.refocusDelay)},s.refocusDelay)},s.focusDelay)})},s.initDelay)});const m=(e,n,o)=>{if(s.select&&e&&e.nodeName&&t.includes(e.nodeName)&&e.value)if(e.createTextRange){const t=e.createTextRange();t.move("character",o),t.select()}else try{void 0!==n&&void 0!==o?e.setSelectionRange(n,o):e.select()}catch(e){console.warn("The input element type does not support selection")}},y=()=>{let t;if(e&&"object"==typeof e&&e.ref&&this.$refs&&(e=this.$refs[e.ref]),e&&"string"==typeof e)this.$el&&"function"==typeof this.$el.querySelector&&(t=this.$el.querySelector(e),h("by selector=%s",e,t));else if(e instanceof i){const n=e;t=n.$refs.input||n.$el,h("by vue component",e,t)}else t=this.$el,h("by component $el",t);return t},p=()=>{document.addEventListener("click",T,!0),document.addEventListener("keyup",g,!0)},v=()=>{document.removeEventListener("click",T,!0),document.removeEventListener("keyup",g,!0)},T=()=>{l=!0},g=()=>{l=!0};function h(){s.debug&&console.log.apply(console,arguments)}}},c.version="1.0.5",window&&window.Vue&&window.Vue.use(c);export default c;