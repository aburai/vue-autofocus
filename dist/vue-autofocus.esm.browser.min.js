/*!
  * vue-autofocus v1.0.0
  * (c) 2019 AndrÃ© Bunse (aburai)
  * @license MIT
  */
let e;const t={initDelay:300,focusDelay:100,refocusDelay:100,debug:!1},n=["INPUT","TEXTAREA","SELECT","BUTTON"],o=e=>{if(!e)return;if("function"!=typeof e.querySelector)return;if(n.includes(e.nodeName)&&!i(e))return e;let t=e.querySelector("[autofocus]");if(!t){const o=n.find(t=>!i(e.querySelector(t)));o&&(t=e.querySelector(o))}return t},i=e=>{if(!e)return"el missing";return e.getAttribute("disabled")||e.classList.contains("disabled")?"el disabled":""},l=(e,t)=>{let n,o;if(t&&t.parent){const e=t.parent;n=e.clientWidth,o=e.clientHeight}else n=window.innerWidth,o=window.innerHeight;const i=e.getBoundingClientRect();return i.left>=0&&i.left<n&&i.top>=0&&i.top<o};class c{init(e){}}c.install=function n(c,s){if(n.installed&&e===c)return;n.installed=!0,e=c;const u=Object.assign({},t,s);let r,f,a,d;c.prototype.$autofocus=function(t,n){const c=Object.assign({},u,n);this.$nextTick(()=>{clearTimeout(r),r=setTimeout(()=>{const e=s();if(!l(e,c))return m("selector is not visible");const t=o(e);if(!(t instanceof HTMLElement))return m("found no element to focus",t);if(t===document.activeElement)return m("element already focused");const n=i(t);if(n)return m("error:",n,t);m("active element before",document.activeElement),this.$nextTick(()=>{clearTimeout(f),clearTimeout(a),clearTimeout(d),f=setTimeout(()=>{t.focus(),a=setTimeout(()=>{t!==document.activeElement&&t.focus(),d=setTimeout(()=>{t!==document.activeElement&&t.focus(),t===document.activeElement?m("focused",t):m("failed",document.activeElement),f=null,a=null,d=null},c.refocusDelay)},c.refocusDelay)},c.focusDelay)})},c.initDelay)});const s=()=>{let n;if(t&&"string"==typeof t)n=this.$el.querySelector(t),m("by selector=%s",t,n);else if(t instanceof e){const e=t;n=e.$refs.input||e.$el,m("by vue component",t,n)}else m("by component $el",n=this.$el);return n};function m(e,t,n,o){c.debug&&console.log.apply(console,arguments)}}},c.version="1.0.0",window&&window.Vue&&window.Vue.use(c);export default c;